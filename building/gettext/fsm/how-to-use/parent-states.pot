# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, IndieGabo
# This file is distributed under the same license as the IndieGabo's Handy Tools package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IndieGabo's Handy Tools \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-04 18:57-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/fsm/how-to-use/parent-states.rst:4
msgid "Parent States"
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:7
msgid "Wait a minute... parents?"
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:9
msgid "Yes! Parents!"
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:11
msgid "You can create a state wich holds the same group of properties and functionalities for several other child states."
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:13
msgid "Say you understand that some actor of yours has several states wich can transition into the same other states. Or share a single or even a group of properties. You can create a parent state and then create child states that inherit from that. Like the following example:"
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:16
msgid "First, create a parent state:"
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:42
msgid "Now we can create a GroundedState wich will inherit all those transitions:"
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:54
msgid "But say you need to register new transitions for your child state:"
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:70
msgid "For me personally i find this quite handy. Tons of code can be avoided and you keep your project organized."
msgstr ""

#: ../../source/fsm/how-to-use/parent-states.rst:-1
msgid "Gabinho Waving"
msgstr ""
